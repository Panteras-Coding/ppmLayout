{"version":3,"sources":["Assets/Dashboard.svg","Assets/monitor.svg","Assets/calendario.svg","Assets/Mensaje.svg","Assets/edit.svg","Assets/door-key.svg","Assets/engranaje.svg","Assets/logout.svg","Assets/information.svg","Assets/upanterasblanco.svg","Assets/Buscar.svg","Assets/menu.svg","Assets/FlechaIzq.svg","Assets/flechaDer.svg","Assets/Coding[ING].svg","Assets/businessman.svg","Components/Sidebar/MenuList.jsx","Components/Sidebar/UserActions.jsx","Components/Sidebar/UserSpace.jsx","Components/Sidebar/InfoBox.jsx","Components/Sidebar/SideBar.jsx","Components/Main/Header.jsx","Components/Main/Views/ViewComponents/ObjectiveStatus.jsx","Components/Main/Views/ViewComponents/ObjectiveList.jsx","Components/Main/Views/ViewComponents/ProjectList.jsx","Components/Main/Views/ViewComponents/MessagesList.jsx","Components/Main/Views/ViewComponents/EventsList.jsx","Components/Main/Views/ViewComponents/ActivitiesList.jsx","Components/Main/Views/Dashboard.jsx","Components/Main/Views/ViewComponents/WorkTableNav.jsx","Components/Main/Views/WorkTable.jsx","Components/Main/Views/Inbox.jsx","config/dates.js","context/CalendarContext.js","Components/Main/Views/ViewComponents/CalendarGrid.jsx","Components/Main/Views/ViewComponents/CalendarHeader.jsx","Components/Main/Views/Calendar.jsx","Components/Main/WorkPlace.jsx","Components/Main/Main.jsx","Components/Login/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuList","props","closed","status","to","onClick","notHome","className","alt","src","require","UserActions","imgSrc","imgClassName","content","UserSpace","name","useState","modal","setModal","style","display","right","top","position","id","borderRadius","InfoBox","dataLink","SideBar","currentClassName","change","Header","firstName","split","slice","join","type","placeholder","ObjectiveStatus","map","item","ObjectiveList","ProjectList","MessagesList","nCanal","EventList","ActivitiesList","Dashboard","WorkTableNav","match","useRouteMatch","carpets","index","url","changePlace","backgroundColor","WorkTable","workPlaceIndex","title","plusLabel","height","width","flexDirection","Inbox","APP_LOCALE","process","JC_CALENDAR_APP_LOCALE","weekendNumbers","Object","freeze","toLocalWeekdayNumber","isoWeekday","getMonthlyCalendarGrid","dateString","month","DateTime","fromFormat","monthInterval","Interval","fromDateTimes","startOf","endOf","firstWeekOffset","start","weekday","lastWeekOffset","end","calendarInterval","minus","days","plus","totalDays","count","Array","fill","_","startOffset","date","key","toFormat","text","toLocaleString","locale","day","trailing","hasSame","isWeekend","includes","DateContext","createContext","formatMonth","DateProvider","Date","currentMonth","getMonth","currentYear","getFullYear","saveMonth","year","saveYear","showMonth","setShowMonth","changeMade","saveChange","dates","setDates","useEffect","Provider","value","children","CalendarGrid","dateContext","useContext","hour","CalendarHeader","weekDays","toggleOption","e","preventDefault","weekDay","short","long","config","Info","weekdaysFormat","narrow","weekDayIndex","DAYS_IN_A_WEEK","getWeekdaysDescriptions","Calendar","WorkPlace","containerClass","indash","path","exact","component","Main","openedClassName","Login","action","changeLog","App","isLoggedIn","setLogState","completeBar","setShowBar","inDashboard","changeView","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5f9c31ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Dashboard.19512b0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/monitor.22acbbfe.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendario.e550852a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Mensaje.85b6c4bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.3e4d12ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/door-key.dd4595c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/engranaje.c5ff09e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.27ff8fe7.svg\";","module.exports = __webpack_public_path__ + \"static/media/information.a2c95ade.svg\";","module.exports = __webpack_public_path__ + \"static/media/upanterasblanco.e78e0ef8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Buscar.c3f3a3af.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.7144191d.svg\";","module.exports = __webpack_public_path__ + \"static/media/FlechaIzq.fe034baf.svg\";","module.exports = __webpack_public_path__ + \"static/media/flechaDer.c9525297.svg\";","module.exports = __webpack_public_path__ + \"static/media/Coding[ING].d4c7368c.svg\";","module.exports = __webpack_public_path__ + \"static/media/businessman.05b79e30.svg\";","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MenuList = (props) => {\r\n\r\n    let closed = [];\r\n    if(!props.status){\r\n        closed = [\r\n            <span>Dashboard</span>,\r\n            <span>Mesa de trabajo</span>,\r\n            <span>Calendario</span>,\r\n            <span>Chat</span>\r\n        ];\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            <Link\r\n                to=\"/\"\r\n                onClick={()=>props.notHome(true)}\r\n                className={\"noUnder\"}\r\n            >\r\n                <li>\r\n                    <img alt={\"Icon\"} src={require('../../Assets/Dashboard.svg')}/>\r\n                    {closed[0]}\r\n                </li>\r\n            </Link>\r\n            <Link\r\n                to=\"/workplace\"\r\n                onClick={()=>props.notHome(false)}\r\n                className={\"noUnder\"}\r\n            >\r\n                <li>\r\n                    <img alt={\"Icon2\"} src={require('../../Assets/monitor.svg')}/>\r\n                    {closed[1]}\r\n                </li>\r\n            </Link>\r\n            <Link\r\n                to=\"/calendar\"\r\n                onClick={()=>props.notHome(false)}\r\n                className={\"noUnder\"}\r\n            >\r\n                <li>\r\n                    <img alt={\"Icon3\"} src={require('../../Assets/calendario.svg')}/>\r\n                    {closed[2]}\r\n                </li>\r\n            </Link>\r\n            <Link\r\n                to=\"/inbox\"\r\n                onClick={()=>props.notHome(false)}\r\n                className={\"noUnder\"}\r\n            >\r\n                <li>\r\n                    <img alt={\"Icon4\"} src={require('../../Assets/Mensaje.svg')}/>\r\n                    {closed[3]}\r\n                </li>\r\n            </Link>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default MenuList;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserActions = ({imgSrc, imgClassName, content}) => {\r\n    return (\r\n        <div className={\"userActions\"}>\r\n            <div className=\"header\">\r\n        <img className={imgClassName}  alt={\"Profile Pic\"} src={imgSrc} />\r\n        {content}\r\n        </div>\r\n            <ul>\r\n            <hr />\r\n\r\n                <Link\r\n\r\n                    className={\"noUnder\"}\r\n                >\r\n                    <li className=\"actionBtn\">\r\n                        <img  className=\"icon\" alt={\"Icon\"} src={require('../../Assets/edit.svg')} />\r\n                        <span>Editar Perfil</span>\r\n\r\n                    </li>\r\n                </Link>\r\n                <hr />\r\n\r\n                <Link\r\n\r\n                    className={\"noUnder\"}\r\n                >\r\n                    <li className=\"actionBtn\">\r\n                        <img className=\"icon\" alt={\"Icon\"} src={require('../../Assets/door-key.svg')} />\r\n                        <span>Cambiar contraseña</span>\r\n                    </li>\r\n                </Link>\r\n                <hr />\r\n\r\n                <Link\r\n\r\n                    className={\"noUnder\"}\r\n                >\r\n                    <li className=\"actionBtn\">\r\n                        <img className=\"icon\" alt={\"Icon\"} src={require('../../Assets/engranaje.svg')} />\r\n                        <span>Configuración</span>\r\n\r\n                    </li>\r\n                </Link>\r\n                <hr />\r\n\r\n                <Link\r\n\r\n                    className={\"noUnder\"}\r\n                >\r\n                    <li className=\"actionBtn\">\r\n                        <img className=\"icon\" alt={\"Icon\"} src={require('../../Assets/logout.svg')} />\r\n\r\n                        <span>Cerrar sesión</span>\r\n\r\n                    </li>\r\n                </Link>\r\n                <hr />\r\n\r\n                <Link\r\n                    className={\"noUnder\"}\r\n                >\r\n                    <li className=\"actionBtn\">\r\n                        <img className=\"icon\" alt={\"Icon\"} src={require('../../Assets/information.svg')} />\r\n\r\n                        <span>Ayuda</span>\r\n\r\n                    </li>\r\n                </Link>\r\n                <hr />\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserActions","import React, { useState } from \"react\";\r\nimport UserActions from \"./UserActions\";\r\n\r\nconst UserSpace = (props) => {\r\n\r\n    let content = <p>{props.name}</p>;\r\n    let imgSrc = \"https://armandohv.netlify.app/assets/me.26f2d9a77a5b54e87d9ea21847f278d1.jpg\"\r\n    let imgClassName = \"profileImgNormal\";\r\n    if (props.status) {\r\n        imgClassName = \"profileImgSmall\";\r\n        content = \"\"\r\n    }\r\n\r\n    const [modal, setModal] = useState(false)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={\"userProfile\"}>\r\n            <div style={{\r\n                 display: modal ? 'block' : 'none',\r\n                 right: '0',\r\n                 top: '2.5rem',\r\n                 position: 'absolute'\r\n            }}\r\n                onClick={() => setModal(!modal)}>\r\n                        <UserActions\r\n                            imgClassName={imgClassName}\r\n                            imgSrc={imgSrc}\r\n                            content={content}\r\n                        />\r\n                </div>\r\n                <button id=\"btnUser\"\r\n                    onClick={() => setModal(!modal)}\r\n                    style={{\r\n                        borderRadius: '50%'\r\n                    }}\r\n                >\r\n                    <img className={imgClassName} alt={\"Profile Pic\"} src={imgSrc} />\r\n                </button>\r\n                {content}\r\n  \r\n                \r\n                \r\n            </div>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default UserSpace;","import React from \"react\";\r\n\r\nconst InfoBox = (props) => {\r\n\r\n    let dataLink = \"\";\r\n\r\n    if(!props.status){\r\n        dataLink = (\r\n            <div className={\"dataCont\"}>\r\n                <p>Aviso de privacidad</p>\r\n                <p>Contacto</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div className={\"infoBox\"}>\r\n            {dataLink}\r\n            <img alt={\"Logo Panteras\"} src={require(\"../../Assets/upanterasblanco.svg\")}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InfoBox;","import React from 'react';\r\nimport MenuList from \"./MenuList\";\r\nimport UserSpace from \"./UserSpace\";\r\nimport InfoBox from \"./InfoBox\";\r\nconst SideBar = (props) => {\r\n    let currentClassName = \"sideBar sbOpened\"\r\n    if(props.status) {\r\n        currentClassName = \"sideBar sbClosed\";\r\n    }\r\n\r\n    return (\r\n        <div className={currentClassName}>\r\n            <header><span onClick={() => props.change(!props.status)}>&#9776;</span></header>\r\n            <UserSpace status={props.status} name={props.name}/>\r\n            <div className={\"listContainer\"}>\r\n                <MenuList\r\n                    status={props.status}\r\n                    notHome={props.notHome}\r\n                />\r\n                <InfoBox status={props.status}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;","import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n    let firstName = props.name.split(' ').slice(0, -1).join(' ');  //Removes surname from complete name from props\r\n    return (\r\n        <header>\r\n            <h3>Buen día, <span>{firstName}</span></h3>\r\n            <div id=\"inputFind\">\r\n                <input type={\"text\"} className=\"inputT\" name={\"searchbox\"} placeholder={\"Buscar\"}/>\r\n                <img src={require('../../Assets/Buscar.svg')} id=\"inputImg\"/>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst ObjectiveStatus = () => {\r\n    let statusClassNames = [\"Nivel\", \"Objetivos\"]\r\n    let doneObj = 15\r\n    return (\r\n        <div className={\"objectiveStatus\"}>\r\n            {statusClassNames.map((item) => {\r\n                return (\r\n                    <div className={\"objCount\"}>\r\n                        <p>{item}</p>\r\n                        <div className={`objNum ${item}`}>\r\n                            {doneObj}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ObjectiveStatus;","import React from \"react\";\r\n\r\nconst ObjectiveList = () => {\r\n    let nObj = 13;\r\n    return (\r\n        <div className={\"dashCont\"}>\r\n            <div className={\"numObj\"}>\r\n                <p className={\"dashContTitle\"}>Mis Objetivos</p>\r\n                <span>{nObj}</span>\r\n            </div>\r\n            <button className={\"objBtn\"} type={\"button\"}>Filtrar: Por importancia</button>\r\n            <div className={\"objList\"}>\r\n                <div className={\"objectiveCont\"}>\r\n                    <p>Nombre</p>\r\n                    <p>Fecha de entrega</p>\r\n                    <p>Equipo</p>\r\n                </div>\r\n                <div className={\"objectiveCont\"}>\r\n                    <p>Nombre</p>\r\n                    <p>Fecha de entrega</p>\r\n                    <p>Equipo</p>\r\n                </div>\r\n                <div className={\"objectiveCont\"}>\r\n                    <p>Nombre</p>\r\n                    <p>Fecha de entrega</p>\r\n                    <p>Equipo</p>\r\n                </div>\r\n                <div className={\"objectiveCont\"}>\r\n                    <p>Nombre</p>\r\n                    <p>Fecha de entrega</p>\r\n                    <p>Equipo</p>\r\n                </div>\r\n                <div className={\"objectiveCont\"}>\r\n                    <p>Nombre</p>\r\n                    <p>Fecha de entrega</p>\r\n                    <p>Equipo</p>\r\n                </div>\r\n                <div className={\"objectiveCont\"}>\r\n                    <p>Nombre</p>\r\n                    <p>Fecha de entrega</p>\r\n                    <p>Equipo</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ObjectiveList;","import React from \"react\";\r\n\r\nconst ProjectList = () => {\r\n    return (\r\n        <div className={\"dashContProj\"} >\r\n            <p className={\"dashContTitle\"}>Mis proyectos</p>\r\n            <div className={\"projectList\"}>\r\n                <div className={\"projectCont\"}>\r\n                    <p>Proyecto</p>\r\n                    <p>Rango</p>\r\n                    <p>#Miembros</p>\r\n                    <p>#Objetivos</p>\r\n                </div>\r\n                <div className={\"projectCont\"}>\r\n                    <p>Proyecto</p>\r\n                    <p>Rango</p>\r\n                    <p>#Miembros</p>\r\n                    <p>#Objetivos</p>\r\n                </div>\r\n                <div className={\"projectCont\"}>\r\n                    <p>Proyecto</p>\r\n                    <p>Rango</p>\r\n                    <p>#Miembros</p>\r\n                    <p>#Objetivos</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;","import React from \"react\";\r\n\r\nconst MessagesList = () => {\r\n    let nCanal = [1, 2, 3, 4]\r\n    let nMsg = 22;\r\n    return (\r\n        <div className={\"dashContMsg\"} >\r\n            <div className={\"numMsg\"}>\r\n                <p className={\"dashContTitle\"}>Mis Mensajes</p>\r\n                <span>{nMsg}</span>\r\n            </div>\r\n            <div className={\"messageList\"}>\r\n                <div className={\"messageCont\"}>\r\n                    <p>Miembro: Contenido del Mensaje</p>\r\n                    <p>Canal {nCanal[0]}</p>\r\n                    <button className={\"channelOne\"}>Responder</button>\r\n                </div>\r\n                <div className={\"messageCont\"}>\r\n                    <p>Miembro: Contenido del Mensaje</p>\r\n                    <p>Canal {nCanal[0]}</p>\r\n                    <button className={\"channelOne\"}>Responder</button>\r\n                </div>\r\n                <div className={\"messageCont\"}>\r\n                    <p>Miembro: Contenido del Mensaje</p>\r\n                    <p>Canal {nCanal[3]}</p>\r\n                    <button className={\"channelFour\"}>Responder</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessagesList;","import React from \"react\";\r\n\r\nconst EventList = () => {\r\n    let nEvents = 7;\r\n    return (\r\n        <div className={\"dashContEvents\"}>\r\n            <div className={\"numEvents\"}>\r\n                <p className={\"dashContTitle\"}>Mis Eventos</p>\r\n                <span>{nEvents}</span>\r\n            </div>\r\n            <div className={\"eventList\"}>\r\n                <div className={\"eventCont\"}>\r\n                    <p>Tipo</p>\r\n                    <p>Fecha y hora</p>\r\n                    <p>Equipo</p>\r\n                </div>\r\n                <div className={\"eventCont\"}>\r\n                    <p>Tipo</p>\r\n                    <p>Fecha y hora</p>\r\n                    <p>Equipo</p>\r\n                </div>\r\n                <div className={\"eventCont\"}>\r\n                    <p>Tipo</p>\r\n                    <p>Fecha y hora</p>\r\n                    <p>Equipo</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EventList;","import React from \"react\";\r\n\r\nconst ActivitiesList = () => {\r\n    let activityNames = [\"Actividad 1\", \"Actividad 2\", \"Actividad 3\", \"Actividad 4\"]\r\n    return (\r\n        <div className={\"dashContAct\"}>\r\n            <p className={\"\"}>Actividades</p>\r\n            {activityNames.map((item) => {\r\n                return (\r\n                    <div className={\"activityCont\"}>\r\n                        <p>{item}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ActivitiesList;","import React from \"react\";\r\nimport ObjectiveStatus from \"./ViewComponents/ObjectiveStatus\";\r\nimport ObjectiveList from \"./ViewComponents/ObjectiveList\";\r\nimport ProjectList from \"./ViewComponents/ProjectList\";\r\nimport MessagesList from \"./ViewComponents/MessagesList\";\r\nimport EventList from \"./ViewComponents/EventsList\";\r\nimport ActivitiesList from \"./ViewComponents/ActivitiesList\";\r\n\r\nconst Dashboard = () => {\r\n    return(\r\n        <>\r\n            <button className={\"widgetsBtn\"} type={\"button\"}><img  id=\"iconMenu\" alt={\"Icon\"} src={require('../../../Assets/menu.svg')} /><p>Configurar Widgets</p></button>\r\n            <ObjectiveStatus/>\r\n            <ObjectiveList/>\r\n            <ProjectList/>\r\n            <EventList/>\r\n            <MessagesList/>\r\n            <ActivitiesList/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from 'react'\r\nimport {Link, useRouteMatch} from \"react-router-dom\";\r\n\r\nconst WorkTableNav = (props) => {\r\n    let match = useRouteMatch();\r\n    let backColors = [\"#A3E1EE\", \"#A3EEC3\", \"#EED5A3\", \"#E9A3EE\", \"#EEA3A3\"]\r\n    let carpets = [\"#A3E1EE\", \"#A3EEC3\", \"#EED5A3\", \"#E9A3EE\", \"#EEA3A3\"]\r\n    carpets[props.index] = backColors[props.index]\r\n    return (\r\n        <div className={\"workTableList\"}>\r\n            <Link\r\n                to={`${match.url}/`}\r\n                onClick={() => props.changePlace(0)}\r\n                className={\"carpetBtn\"}\r\n                style={{backgroundColor: carpets[0]}}\r\n            >\r\n                Lista\r\n            </Link>\r\n            <Link\r\n                to={`${match.url}/`}\r\n                onClick={() => props.changePlace(1)}\r\n                className={\"carpetBtn\"}\r\n                style={{backgroundColor: carpets[1]}}\r\n            >\r\n                Gantt\r\n            </Link>\r\n            <Link\r\n                to={`${match.url}/`}\r\n                onClick={() => props.changePlace(2)}\r\n                className={\"carpetBtn\"}\r\n                style={{backgroundColor: carpets[2]}}\r\n            >\r\n                Calendario\r\n            </Link>\r\n            <Link\r\n                to={`${match.url}/`}\r\n                onClick={() => props.changePlace(3)}\r\n                className={\"carpetBtn\"}\r\n                style={{backgroundColor: carpets[3]}}\r\n            >\r\n                Diagrama\r\n            </Link>\r\n            <Link\r\n                to={`${match.url}/`}\r\n                onClick={() => props.changePlace(4)}\r\n                className={\"carpetBtn\"}\r\n                style={{backgroundColor: carpets[4]}}\r\n            >\r\n                Árbol\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WorkTableNav;","import React, {useState} from \"react\";\r\nimport WorkTableNav from \"./ViewComponents/WorkTableNav\";\r\nimport WorkList from \"./ViewComponents/WorkList\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch\r\n} from 'react-router-dom'\r\n\r\nconst WorkTable = () => {\r\n    let match = useRouteMatch()\r\n    const [workPlaceIndex, changePlace] = useState(0);\r\n    let title = \"Objetivos\"\r\n    let plusLabel = \"Objetivo\"\r\n    if(workPlaceIndex === 1){\r\n        title = \"Miembros\"\r\n        plusLabel = \"Miembro\"\r\n    }\r\n    return(\r\n        <div style={{height: \"85%\",width: \"100%\", display:\"flex\",flexDirection: \"column\"}}>\r\n            \r\n                <button className={\"workFilterBtn\"} type={\"button\"}>Filtrar:   Por equipo</button>\r\n            \r\n            <div className={\"workTableCard\"}>\r\n                <WorkTableNav className={\"workTableLink\"} index={workPlaceIndex} changePlace={changePlace}/>           \r\n                <Switch>\r\n                    <div className={\"workListCont\"}>\r\n                        <div className={\"workTitleBar\"}>\r\n                            <p>{title} de Agrupación, proyecto, área</p>\r\n                            <button className={\"workTitleBtn\"} type={\"button\"}>+ Agregar {plusLabel}</button>\r\n                        </div>\r\n                        <hr/>\r\n                        {/*<Route path={`${match.path}/`} exact component={WorkList}/>*/}\r\n\r\n                    </div>\r\n                </Switch>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WorkTable;","import React from \"react\";\r\n\r\nconst Inbox = () => {\r\n    return(\r\n        <span>\r\n            Este es el Inbox\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default Inbox;","import { DateTime, Info, Interval } from 'luxon';\r\nconst DEFAULT_LOCALE = 'es-MX';\r\nconst APP_LOCALE = process.env.JC_CALENDAR_APP_LOCALE ?? DEFAULT_LOCALE;\r\n\r\nexport const DAYS_IN_A_WEEK = 7;\r\nexport const MONTH_FORMAT = 'yyyy-MM';\r\nexport const DATE_FORMAT = 'yyyy-MM-dd';\r\nexport const TIME_FORMAT = 'hh:mm';\r\n\r\nexport const DATE_REGEX = /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/;\r\nexport const TIME_REGEX = /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;\r\n\r\nconst SATURDAY_NUMBER = 7;\r\nconst SUNDAY_NUMBER = 1;\r\nconst weekendNumbers = Object.freeze([SATURDAY_NUMBER, SUNDAY_NUMBER]);\r\n\r\n/**\r\n * Convert the ISO week number to local week number.\r\n * That will make the week start from Sunday.\r\n * @param {number} isoWeekday ISO week number: from `1 - Monday` to `7 - Sunday`.\r\n */\r\nexport function toLocalWeekdayNumber(isoWeekday) {\r\n  return (isoWeekday % DAYS_IN_A_WEEK) + 1;\r\n}\r\n\r\n/**\r\n * Returns long, short, and narrow weekdays descriptions for the current `APP_LOCALE`.\r\n */\r\nexport function getWeekdaysDescriptions() {\r\n  const config = { locale: APP_LOCALE };\r\n  const long = Info.weekdaysFormat('long', config);\r\n  const short = Info.weekdaysFormat('short', config);\r\n  const narrow = Info.weekdaysFormat('narrow', config);\r\n\r\n  const weekDays = Array(DAYS_IN_A_WEEK)\r\n    .fill(null)\r\n    .map((_, weekDayIndex) => {\r\n      return {\r\n        long: long[weekDayIndex],\r\n        short: short[weekDayIndex],\r\n        narrow: narrow[weekDayIndex],\r\n      };\r\n    });\r\n\r\n  // luxon only return ISO weekdays order,\r\n  // and we want Sunday to be the first day.\r\n  return [\r\n    weekDays[DAYS_IN_A_WEEK - 1],\r\n    ...weekDays.slice(0, DAYS_IN_A_WEEK - 1),\r\n  ];\r\n}\r\n\r\n/**\r\n * Returns an array for the passed date's month with trailing dates for next/previous months.\r\n * The array represents a calendar that starts on Sunday and ends on Saturday.\r\n * @param {string} dateString The date (format: `yyyy-MM`) to generate the grid from.\r\n */\r\nexport function getMonthlyCalendarGrid(dateString) {\r\n  const month = DateTime.fromFormat(dateString, MONTH_FORMAT);\r\n\r\n  // Get the interval for the provided month\r\n  const monthInterval = Interval.fromDateTimes(\r\n    month.startOf('month'),\r\n    month.endOf('month')\r\n  );\r\n\r\n  // Get offsets for trailing months\r\n  const firstWeekOffset = toLocalWeekdayNumber(monthInterval.start.weekday) - 1;\r\n  const lastWeekOffset =\r\n    DAYS_IN_A_WEEK - toLocalWeekdayNumber(monthInterval.end.weekday);\r\n\r\n  // Get calendar with trailing intervals\r\n  const calendarInterval = Interval.fromDateTimes(\r\n    monthInterval.start.minus({\r\n      days: firstWeekOffset > 0 ? firstWeekOffset : 0,\r\n    }),\r\n    monthInterval.end.plus({ days: lastWeekOffset })\r\n  );\r\n\r\n  // Map the interval to an ordered dates array that represents a calendars month.\r\n  const totalDays = calendarInterval.count('days');\r\n  const start = calendarInterval.start;\r\n  return Array(totalDays)\r\n    .fill(null)\r\n    .map((_, startOffset) => {\r\n      const date = start.plus({ days: startOffset });\r\n      return {\r\n        key: date.toFormat(DATE_FORMAT),\r\n        text: date.toLocaleString({ locale: APP_LOCALE, day: 'numeric' }),\r\n        trailing: !month.hasSame(date, 'month'),\r\n        isWeekend: weekendNumbers.includes(toLocalWeekdayNumber(date.weekday)),\r\n      };\r\n    });\r\n}\r\n\r\n/**\r\n * Returns a localized formatted month and year string.\r\n * @param {string} monthString The month to get the key from.\r\n */\r\nexport function getDisplayMonthAndYear(monthString) {\r\n  return DateTime.fromFormat(monthString, MONTH_FORMAT).toLocaleString({\r\n    locale: APP_LOCALE,\r\n    year: 'numeric',\r\n    month: 'long',\r\n  });\r\n}\r\n\r\n/**\r\n * Returns a date string representation of the provided DateTime.\r\n * @param {DateTime} dateTime\r\n */\r\nexport function dateTimeToDateString(dateTime) {\r\n  return dateTime.toFormat(DATE_FORMAT, { locale: APP_LOCALE });\r\n}\r\n\r\n/**\r\n * Returns a time string representation of the provided DateTime.\r\n * @param {DateTime} date\r\n */\r\nexport function dateTimeToTimeString(dateTime) {\r\n  return dateTime.toLocaleString(DateTime.TIME_24_SIMPLE);\r\n}\r\n\r\n/**\r\n * Returns an object with keys `date`, and `time` from milliseconds of a date.\r\n * @param {number} dateMillis\r\n */\r\nexport function millisToDateTimeStrings(dateMillis) {\r\n  const dateTime = DateTime.fromMillis(dateMillis);\r\n\r\n  return {\r\n    date: dateTimeToDateString(dateTime),\r\n    time: dateTimeToTimeString(dateTime),\r\n  };\r\n}\r\n\r\n/**\r\n * Returns total milliseconds from a date and time.\r\n * @param {string} dateString\r\n * @param {string} timeString\r\n */\r\nexport function dateTimeStringsToMillis(dateString, timeString) {\r\n  return DateTime.fromFormat(\r\n    `${dateString} ${timeString}`,\r\n    `${DATE_FORMAT} ${TIME_FORMAT}`,\r\n    { locale: APP_LOCALE }\r\n  ).toMillis();\r\n}\r\n\r\nexport function getDisplayTimeFromMillis(dateMillis) {\r\n  return DateTime.fromMillis(dateMillis).toLocaleString({\r\n    ...DateTime.TIME_SIMPLE,\r\n    locale: APP_LOCALE,\r\n  });\r\n}","import React, { createContext, useState, useEffect } from 'react';\r\nimport { getMonthlyCalendarGrid  } from '../config/dates';\r\n\r\nexport const DateContext = createContext();\r\n\r\nfunction formatMonth (month) {\r\n    month = month + 1;\r\n    if(month < 10){\r\n        month = '0' + month;\r\n    }\r\nreturn month\r\n}\r\nconst DateProvider = (props) => {\r\n    const date = new Date();\r\n    var currentMonth = date.getMonth();\r\n    var currentYear = date.getFullYear();\r\n    const [month, saveMonth] = useState(currentMonth);\r\n    const [year, saveYear] = useState(currentYear);\r\n    const [showMonth, setShowMonth] = useState(true);\r\n\r\n    const [changeMade, saveChange] = useState(false);\r\n    \r\n    const [dates, setDates] = useState(getMonthlyCalendarGrid(year+\"-\"+formatMonth(month)))\r\n    useEffect(() => {\r\n    \r\n        if (changeMade) {\r\n            const getSearchMonth = () => {\r\n                setDates(getMonthlyCalendarGrid(year+\"-\"+formatMonth(month)))\r\n                }\r\n            getSearchMonth();\r\n        }\r\n\r\n    }, [month]);\r\n\r\n    return (\r\n        <DateContext.Provider\r\n            value={{\r\n                month,\r\n                year,\r\n                dates,\r\n                showMonth,\r\n                setShowMonth,\r\n                saveMonth,\r\n                saveChange,\r\n                saveYear\r\n            }}\r\n        >\r\n            {props.children}\r\n        </DateContext.Provider>\r\n    );\r\n}\r\n\r\nexport default DateProvider;","import React from 'react';\r\nimport { useContext } from \"react\";\r\nimport { DateContext } from '../../../../context/CalendarContext';\r\n\r\nconst CalendarGrid = () => {\r\n    const dateContext = useContext(DateContext)\r\n    const { dates, showMonth } = dateContext;\r\n    const hours = [\"00:00\", \"01:00\", \"02:00\", \"03:00\", \"04:00\", \"05:00\", \"06:00\", \"07:00\", \"08:00\", \"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\",\"15:00\",\"16:00\",\"17:00\",\"18:00\",\"19:00\",\"20:00\",\"21:00\",\"22:00\",\"23:00\"];\r\n  if(showMonth){\r\n  return (\r\n    <ul className=\"calendarGrid\">\r\n      {dates.map((date) => (\r\n        <li key={date.key} className={ date.isWeekend && !date.trailing ? \"finDeSemana\" : date.trailing ? \"deOtroMes\" : null }>{date.text}</li>\r\n      ))}\r\n    \r\n    </ul>\r\n  );\r\n      }\r\n      else {\r\n        return (\r\n          <ul className=\"hoursGrid\">\r\n          {hours.map((hour) => (\r\n            <li key={hour}>{hour}</li>\r\n          ))}\r\n        \r\n        </ul>\r\n        )\r\n      }\r\n}\r\n\r\n\r\n\r\nexport default CalendarGrid;","import React, { useContext, useState } from 'react';\r\nimport { DateContext } from '../../../../context/CalendarContext';\r\n\r\nconst CalendarHeader = ({ weekDays }) => {\r\n  const dateContext = useContext(DateContext);\r\n  const { month, saveMonth, year, saveYear, saveChange, showMonth, setShowMonth } = dateContext;\r\n\r\n  const monthNames = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\",\r\n    \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"\r\n  ];\r\n  const toggleOption = (e) => {\r\n    e.preventDefault();\r\n    setShowMonth(!showMonth);\r\n  }\r\n\r\n  const toLeft = (e) => {\r\n    e.preventDefault();\r\n    if (month < 1) {\r\n      saveMonth(11)\r\n      saveYear(year - 1)\r\n    }\r\n    else {\r\n      saveMonth(month - 1);\r\n    }\r\n    saveChange(true)\r\n  }\r\n\r\n  const toRight = (e) => {\r\n    e.preventDefault();\r\n    if (month > 10) {\r\n      saveMonth(0)\r\n      saveYear(year + 1)\r\n    }\r\n    else {\r\n      saveMonth(month + 1);\r\n    }\r\n    saveChange(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"calendarHeader\">\r\n        {showMonth ?\r\n          <div className={\"toggler\"}>\r\n            <div className=\"toLeft\" onClick={toLeft}>  <img alt={\"Left\"} src={require('../../../../Assets/FlechaIzq.svg')} /> </div>\r\n            <div className=\"toRight\" onClick={toRight}> <img alt={\"Right\"} src={require('../../../../Assets/flechaDer.svg')} /> </div>\r\n          </div>\r\n          : null\r\n        }\r\n        <h1 className=\"fecha\">{monthNames[month]} {year}</h1>\r\n        <div className={\"toggler\"}>\r\n          <div onClick={toggleOption} className={showMonth ? \"activo\" : \"inactivo\"}><p>Mes</p></div>\r\n          <div onClick={toggleOption} className={showMonth ? \"inactivo\" : \"activo\"}><p>Semana</p></div>\r\n        </div>\r\n      </div>\r\n      <div className={showMonth ? \"weekdaysHeader\" : \"weekdaysHeader2\"} >\r\n        {!showMonth ?\r\n          <li\r\n\r\n          >\r\n            <span>    </span>\r\n          </li>\r\n          : null}\r\n        {weekDays.map((weekDay) => (\r\n          <li\r\n            key={weekDay.short}\r\n          >\r\n            <span>{weekDay.long}</span>\r\n          </li>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CalendarHeader;","import React from \"react\";\r\nimport { getWeekdaysDescriptions } from \"../../../config/dates\";\r\nimport CalendarGrid from \"./ViewComponents/CalendarGrid\";\r\nimport CalendarHeader from \"./ViewComponents/CalendarHeader\";\r\n\r\nconst weekDays = getWeekdaysDescriptions();\r\nconst Calendar = () => {\r\n  \r\n    return (\r\n        <div className={\"calendar\"}>\r\n            <CalendarHeader weekDays={weekDays} />\r\n            <CalendarGrid /> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar;","import React from \"react\";\r\nimport {\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport Dashboard from \"./Views/Dashboard\";\r\nimport WorkTable from \"./Views/WorkTable\";\r\nimport Inbox from \"./Views/Inbox\";\r\nimport Calendar from \"./Views/Calendar\";\r\n\r\nconst WorkPlace = (props) => {\r\n    let containerClass = \"homeWorkPlace\"\r\n    if(!props.indash){\r\n        containerClass = \"workPlace\"\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <div className={containerClass}>\r\n                <Route path=\"/\" exact component={Dashboard}/>\r\n                <Route path=\"/workplace\">\r\n                    <WorkTable />\r\n                </Route>\r\n                <Route path=\"/inbox\">\r\n                    <Inbox />\r\n                </Route>\r\n                <Route path=\"/calendar\">\r\n                    <Calendar />\r\n                </Route>\r\n            </div>\r\n        </Switch>\r\n\r\n    );\r\n}\r\n\r\nexport default WorkPlace;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport WorkPlace from \"./WorkPlace\";\r\n\r\nconst Main = (props) => {\r\n\r\n    let openedClassName = \"main incomplete\";\r\n    if(props.status){\r\n       openedClassName = \"main complete\"\r\n    }\r\n\r\n    return (\r\n        <div className={openedClassName}>\r\n            <Header name={props.name}/>\r\n            <WorkPlace\r\n                indash={props.indash}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\n\r\nfunction Login(props){\r\n\r\n    return <div className=\"mainContainerLogin\">\r\n    \r\n        <div className=\"container\" id=\"container\">\r\n            <div className=\"form-container sign-in-container\">\r\n                <div className=\"overlay\">\r\n                    <div className=\"overlay-panel overlay-right\">\r\n                        <h1>Bienvenido a Panteras PM<sup>[ING]</sup></h1>\r\n                        <p>Si tienes problemas para acceder a tu cuenta, contáctanos</p>\r\n                        <img alt={\"Logo Panteras\"} src={require(\"../../Assets/Coding[ING].svg\")}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"overlay-container\">\r\n                <form action=\"#\">\r\n                    <img alt={\"Logo Panteras\"} src={require(\"../../Assets/businessman.svg\")}/>\r\n                    <input id=\"user\" type=\"email\" placeholder=\"Usuario\"/>\r\n                    <input id=\"pwd\" type=\"password\" placeholder=\"Contraseña\" />\r\n                    <button onClick={props.changeLog}>Login</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    \r\n    </div>\r\n  }\r\n\r\n  export default Login;","import React, {useState} from 'react';\r\nimport SideBar from \"./Components/Sidebar/SideBar\";\r\nimport Main from \"./Components/Main/Main\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport {HashRouter as Router} from 'react-router-dom'\r\nimport DateProvider from './context/CalendarContext';\r\n\r\nconst App = () =>{\r\n\r\n    const [isLoggedIn, setLogState] = useState(false);\r\n\r\n    const [completeBar, setShowBar] = useState(false); //State hook to open or close sidebar\r\n    const [inDashboard, changeView] = useState(true);\r\n    \r\n    if (isLoggedIn === true)\r\n    {\r\n        return (\r\n            <DateProvider>\r\n            <Router>\r\n                <div>\r\n                    <SideBar\r\n                        change={setShowBar}\r\n                        status={completeBar}\r\n                        name={\"Armando Hernández\"}\r\n                        notHome={changeView}\r\n                    />\r\n                    <Main\r\n                        status={completeBar}\r\n                        name={\"Armando Hernandez\"}\r\n                        indash={inDashboard}\r\n                    />\r\n                </div>\r\n            </Router>\r\n            </DateProvider>\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Login changeLog={() => setLogState(true)}/>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}